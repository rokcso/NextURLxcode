"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/ru",{

/***/ "./public/posts/ru.json":
/*!******************************!*\
  !*** ./public/posts/ru.json ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = JSON.parse('[{"id":"what-is-url","title":"URL: Комплексное введение в унифицированный указатель ресурсов","excerpt":"URL: унифицированный указатель ресурсов для поиска интернет-ресурсов. Он состоит из протокола, имени домена, пути, строки запроса и идентификатора фрагмента. Обеспечивает легкий доступ к веб-страницам, изображениям, файлам и т. д. через простой текстовый формат.","content":"URL, сокращение от Uniform Resource Locator, представляет собой строку, используемую для поиска и идентификации ресурсов в Интернете. URL-адрес — это одна из основ современного Интернета, позволяющая нам получать доступ к веб-страницам, изображениям, видео, файлам и другим онлайн-ресурсам через простой текстовый формат. [|] URL-адрес состоит из нескольких компонентов, каждый из которых служит определенной цели и функциональности. Вот основные компоненты URL-адреса: [|] 1. Протокол: протокол определяет протокол связи, необходимый для доступа к ресурсу, например HTTP (протокол передачи гипертекста), HTTPS (безопасный HTTP), FTP (протокол передачи файлов), и т. д. Протокол обычно располагается в начале URL-адреса, за которым следует двоеточие и две косые черты (например, http:// или https://). [|] 2. Имя домена: Имя домена однозначно идентифицирует компьютер или сеть в Интернете. Это может быть имя хоста (например, www.example.com) или IP-адрес (например, 192.168.0.1). Доменное имя соответствует протоколу и обычно отделяется косой чертой. [|] 3. Путь: Путь указывает расположение ресурса на сервере. Это строка, разделенная косой чертой, используемая для идентификации структуры каталогов или местоположения файла на сервере. Путь идет после имени домена и может содержать несколько уровней по мере необходимости. [|] 4. Строка запроса: строка запроса используется для передачи параметров и данных на сервер. Он начинается со знака вопроса (?), за которым следуют параметры, представленные в парах ключ-значение. Несколько параметров разделяются амперсандом (&). [|] 5. Идентификатор фрагмента: Идентификатор фрагмента указывает конкретный раздел или привязку на веб-странице или в документе. Он начинается с решетки (#), за которой следует имя или идентификатор фрагмента. Идентификаторы фрагментов обычно используются для указания на определенные части страницы. [|] Пример URL-адреса: [|] Предположим, мы хотим получить доступ к изображению с именем «pic.jpg» на веб-сайте example.com, расположенном по адресу /images/path, с параметрами width=500 и height=300. . Соответствующим URL-адресом может быть: http://www.example.com/images/pic.jpg?width=500&height=300 [|] URL-адрес служит для идентификации и поиска ресурсов в Интернете. С помощью URL-адресов мы можем удобно получить доступ к различным онлайн-ресурсам, будь то веб-страницы, изображения или файлы других типов. Понимание структуры и компонентов URL-адреса помогает нам лучше понимать и использовать Интернет.","siteTitle":"Что такое URL? - Кодирование/декодирование URL-адресов – онлайн-инструмент - URLxcode.com","siteDescription":"URL: унифицированный указатель ресурсов для поиска интернет-ресурсов. Он состоит из протокола, имени домена, пути, строки запроса и идентификатора фрагмента. Обеспечивает легкий доступ к веб-страницам, изображениям, файлам и т. д. через простой текстовый формат.","siteKeywords":"URL, Кодировать, Декодировать, Онлайн, Инструмент","siteCanonical":"https://www.urlxcode.com/ru/what-is-url"},{"id":"what-is-url-encoding","title":"Понимание кодирования URL-адресов: упрощение веб-адресов для всех","excerpt":"В этой статье мы рассмотрим концепцию кодирования URL-адресов, которая является важным аспектом просмотра веб-страниц. Эта статья, предназначенная для людей, не имеющих большого опыта работы с компьютером, призвана предоставить всестороннее, но доступное понимание кодирования URL-адресов. Мы углубимся в основы URL-адресов, объясним необходимость кодирования и обсудим ключевые принципы и методы. К концу этой статьи вы получите более четкое представление о кодировании URL-адресов и о том, как оно обеспечивает бесперебойную связь в Интернете.","content":"Вы когда-нибудь задумывались, как работают веб-адреса? Вы могли заметить, что они часто содержат странные символы, например %20 или %3F. Эти, казалось бы, случайные символы не являются ошибками, а являются важной частью URL-адресов, называемой кодировкой URL-адресов. [|] В этой статье мы раскроем тайну кодирования URL-адресов и объясним его значение в мире просмотра веб-страниц. [|] Что такое URL? [|] Прежде чем мы углубимся в кодировку URL-адресов, давайте сначала разберемся, что такое URL-адрес. URL означает «Единый указатель ресурсов» и, по сути, является адресом, который помогает нам находить ресурсы в Интернете. URL-адреса используются для доступа к веб-страницам, изображениям, видео и другому контенту, доступному во Всемирной паутине. [|] Необходимость кодирования URL-адресов: [|] URL-адреса разрабатываются так, чтобы они были удобочитаемыми и информативными. Однако Интернет является глобальной платформой, и во всем мире используются разные языки и символы. К сожалению, URL-адреса не предназначены для обработки всех возможных символов. Некоторые символы, такие как пробелы, специальные символы и неанглийские символы, имеют особое значение в базовой технологии, лежащей в основе Интернета. Когда эти символы появляются непосредственно в URL-адресе, они могут вызвать путаницу или даже нарушить намеченную функциональность. [|] Что такое кодирование URL? [|] Кодирование URL-адресов — это метод, используемый для преобразования специальных символов, символов и символов, отличных от английского, в стандартизированный формат, который можно безопасно передавать через Интернет. Это гарантирует, что URL-адреса остаются действительными и функциональными, независимо от содержащихся в них символов. [|] Принципы кодирования URL-адресов: [|] Кодирование URL-адресов следует нескольким фундаментальным принципам: [|] Преобразование символов в ASCII: Чтобы закодировать символ, он сначала преобразуется в представление ASCII (Американский стандартный код для обмена информацией). ASCII — это широко используемый стандарт кодировки символов, который присваивает каждому символу уникальное числовое значение. [|] Представление символов в процентной кодировке: после преобразования символа в ASCII он представляется с использованием процентной кодировки. При кодировании процентов символ заменяется знаком процента («%»), за которым следуют две шестнадцатеричные цифры, представляющие значение ASCII. Например, пробел ( ) кодируется как «%20», а вопросительный знак (?) — как «%3F». [|] Обработка зарезервированных символов: некоторые символы имеют зарезервированные значения в URL-адресах. например, амперсанд (&), знак равенства (=) и косая черта (/). Чтобы использовать эти символы как часть фактического содержимого URL-адреса, их необходимо закодировать. Например, амперсанд (&) кодируется как «%26». [|] Кодирование URL-адресов на практике: [|] Кодирование URL-адресов автоматически выполняется веб-браузерами и веб-серверами при необходимости. Когда вы нажимаете на ссылку, содержащую специальные символы, или отправляете форму с текстом, отличным от английского, браузер кодирует URL-адрес перед отправкой его на сервер. Аналогичным образом веб-серверы декодируют URL-адрес для получения нужного ресурса. [|] В заключение: [|] Кодирование URL-адресов — это важнейший механизм, обеспечивающий бесперебойную связь в Интернете. Это гарантирует, что веб-адреса смогут обрабатывать широкий спектр символов, сохраняя при этом их целостность и функциональность. Поняв основы кодирования URL-адресов, вы теперь обладаете знаниями, позволяющими уверенно перемещаться по Интернету и лучше понимать базовую технологию, лежащую в основе Интернета.","siteTitle":"Что такое кодирование URL-адресов? - Кодирование/декодирование URL-адресов – онлайн-инструмент - URLxcode.com","siteDescription":"В этой статье мы рассмотрим концепцию кодирования URL-адресов, которая является важным аспектом просмотра веб-страниц. Эта статья, предназначенная для людей, не имеющих большого опыта работы с компьютером, призвана предоставить всестороннее, но доступное понимание кодирования URL-адресов. Мы углубимся в основы URL-адресов, объясним необходимость кодирования и обсудим ключевые принципы и методы. К концу этой статьи вы получите более четкое представление о кодировании URL-адресов и о том, как оно обеспечивает бесперебойную связь в Интернете.","siteKeywords":"URL, Кодировать, Декодировать, Онлайн, Инструмент","siteCanonical":"https://www.urlxcode.com/ru/what-is-url-encoding"}]');

/***/ })

});